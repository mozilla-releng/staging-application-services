searchState.loadedDescShard("suggest", 0, "The server requested a backoff after too many requests\nContains the error value\nA list of errors that are internal to the component. This …\nA single geographic place.\nA fetched geoname with info on how it was matched.\nThe type of a geoname.\nWhat should be interrupted when SuggestStore::interrupt is …\nAn operation was interrupted by calling …\nSingle sample for a Glean labeled_timing_distribution\nContains the success value\nInterrupt read operations like SuggestStore::query\nInterrupt both read and write operations,\nThe error type for all Suggest component operations. These …\nGlobal Suggest configuration data.\nConstraints limit which suggestions to ingest from Remote …\nIngestion metrics\nPer-provider configuration data.\nThe store is the entry point to the Suggest component. It …\nBuilder for SuggestStore\nA suggestion from the database to show in the address bar.\nA provider is a source of search suggestions.\nSome providers manage multiple suggestion subtypes. …\nA query for suggestions to show in the address bar.\nInterrupt write operations.  This mostly means …\nThe top-level administrative region for the place within …\nBenchmarking support\nDeprecated: this is no longer used by the suggest …\nCreates a WAL checkpoint. This will cause changes in the …\nRemoves all content from the database.\nClear dismissed suggestions\nISO-3166 two-letter uppercase country code, e.g., “US”.\nDismiss a suggestion\nSamples for the <code>suggest.ingestion_download_time</code> metric\nOnly run ingestion if the table <code>suggestions</code> is empty\n<code>Exposure</code> provider - For each desired exposure suggestion …\nFetches geonames stored in the database. A geoname …\nReturns global Suggest configuration data.\nReturns per-provider Suggest configuration data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe geoname that was matched.\nThe <code>geonameid</code> straight from the geoname table.\nWhether <code>self</code> and <code>other</code> have the same region and country. …\nIngests new suggestions from Remote Settings.\nSamples for the <code>suggest.ingestion_time</code> metric\nInterrupts any ongoing queries.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLatitude in decimal degrees.\nAdd an sqlite3 extension to load\nLongitude in decimal degrees.\nThe type of name that was matched.\nWraps each iteration in <code>ingest</code> and records the time for it.\nThis is pretty much the place’s canonical name. Usually …\nCreates a Suggest store.\nPopulation size.\nWhether the name was matched by prefix.\nQueries the database for suggestions.\nSamples for the <code>suggest.query_time</code> metric\nQueries the database for suggestions.\nDetermines whether a “raw” sponsored suggestion URL is …\nGet the raw URL for this suggestion, if present\nGet the URL for this suggestion, if present\nTime in microseconds\nThreshold for weather keyword prefix matching when a …\nWeather suggestion score.\nTrait for simple benchmarks\nTrait for benchmarks that require input\nInput that will be created once and then passed by …\nInput that will be created for each of the benchmark’s …\nPerform the operations that we’re benchmarking.\nPerform the operations that we’re benchmarking.\nCleanup the temp directory created for SuggestStore …\nGenerate the global input (not included in the benchmark …\nGenerate the per-iteration input (not included in the …\nRemotes settings client for benchmarking\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet IngestBenchmark instances for all record types\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSplit the keyword by the first whitespace into the prefix …\nPerforms a depth-first traversal over all possible chunk …\nGiven a list of keywords for a suggestion, returns a …")